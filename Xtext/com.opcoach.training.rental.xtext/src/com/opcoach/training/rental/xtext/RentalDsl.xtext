// automatically generated by Xtext
grammar com.opcoach.training.rental.xtext.RentalDsl with org.eclipse.xtext.common.Terminals 

import "http://com.opcoach.training/rental/1.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

RentalAgency returns RentalAgency:
	'RentalAgency'
	name=EString
	'{'
		(address=Address)?
		('objectsToRent' '{' objectsToRent+=RentalObject ( "," objectsToRent+=RentalObject)* '}' )?
		('customers' '{' customers+=Customer ( "," customers+=Customer)* '}' )?
		('rentals' '{' rentals+=Rental ( "," rentals+=Rental)* '}' )?
    '}';


EString returns ecore::EString:
	STRING | ID;  

Address returns Address:
	{Address}
	'Address'
	'{'
		('streetType' streetType=StreetType)?
		('number' number=EInt)?
		('zipCode' zipCode=EString)?
		('city' city=EString)?
		('streetName' streetName=EString)?
    '}';

RentalObject returns RentalObject:
	{RentalObject}
	(available?='available')?
	'RentalObject'
	ID=ELong
	'{'
		'name' name=EString
    '}';

Customer returns Customer:
	'Customer'
	'{'
		'firstName' firstName=EString
		'name' name=EString
		(address=Address)?
		('licenses' '{' licenses+=License ( "," licenses+=License)* '}' )?
    '}';

Rental returns Rental:
	'Rental'
	'{'
		('startDate' startDate=EDate)?
		('endDate' endDate=EDate)?
		'customer' customer=[Customer|EString]
		'rentedObject' rentedObject=[RentalObject|EString]
    '}';

enum StreetType returns StreetType:
	Street = 'Street' | Road = 'Road';

EInt returns ecore::EInt:
	'-'? INT;

ELong returns ecore::ELong:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

License returns License:
	{License}
	'License'
	'{'
		('number' number=EInt)?
		('validityDate' validityDate=EDate)?
		('EReference0' EReference0=[Customer|EString])?
    '}';

EDate returns ecore::EDate:
	'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
